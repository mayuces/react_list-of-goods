{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseHandler","setState","alphabeticSorter","ALPABET","lengthSorter","LENGTH","resetHandler","this","newGoods","goods","visibleGoods","sort","g1","g2","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAsCE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,iBAAmB,WACjB,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,aAAe,WACb,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAGIU,KAAKX,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIU,EA5DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOD,GAazB,OAXAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQf,GACN,KAAKL,EAASU,QACZ,OAAOS,EAAGE,cAAcD,GAC1B,KAAKpB,EAASY,OACZ,OAAOO,EAAGG,OAASF,EAAGE,OACxB,QACE,OAAO,MAINlB,EACHa,EAAaM,UACbN,EAyCeO,CAAkBvB,EACjC,CAAEI,WAAUD,eAEd,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBX,KAAKX,MAAME,WAAaL,EAASU,SAAW,YACzEiB,QAASb,KAAKL,iBAHhB,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBX,KAAKX,MAAME,WAAaL,EAASY,QAAU,YAC3Ee,QAASb,KAAKH,aAHhB,4BAQA,wBACEe,KAAK,SACLD,UAAS,6BAAwBX,KAAKX,MAAMC,YAAc,YAC1DuB,QAASb,KAAKP,eAHhB,qBAQEF,GAAYD,EAEV,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,aAHhB,mBAQA,MAIN,6BACE,6BACGE,EAASa,KAAI,SAAAC,GACZ,OACE,8BACE,qBACE,UAAQ,OAERJ,UAAU,qCAHZ,SAKGI,GAHIA,mBApFzB,GAAyBC,IAAMC,WCpD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e64d016b.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.ALPABET:\n        return g1.localeCompare(g2);\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n      default:\n        return 0;\n    }\n  });\n\n  return isReversed\n    ? visibleGoods.reverse()\n    : visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseHandler = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  alphabeticSorter = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  lengthSorter = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetHandler = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const newGoods = getReorderedGoods(goodsFromServer,\n      { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== SortType.ALPABET && 'is-light'}`}\n            onClick={this.alphabeticSorter}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.lengthSorter}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!this.state.isReversed && 'is-light'}`}\n            onClick={this.reverseHandler}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetHandler}\n              >\n                Reset\n              </button>\n            )\n            : ''}\n\n        </div>\n\n        <ul>\n          <ul>\n            {newGoods.map(good => {\n              return (\n                <div>\n                  <div\n                    data-cy=\"Good\"\n                    key={good}\n                    className=\"box column is-info is-rounded mb-3\"\n                  >\n                    {good}\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}